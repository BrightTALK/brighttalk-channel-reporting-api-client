buildscript {
  ext {
    orgSpringframeworkVersion = '4.0.6.RELEASE'
  }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'maven'

eclipse.classpath.downloadJavadoc = true // defaults to 'false'

repositories {
  mavenCentral()
}

dependencies {
  // Compile-time dependencies  
  compile("com.google.guava:guava:16.0.1")
  compile("org.slf4j:slf4j-api:1.7.7")  
  // Spring framework modules for Spring implementation of API client based on RestTemplate
  // spring-web module for RestTemplate et al.
  compile("org.springframework:spring-web:${orgSpringframeworkVersion}")
  // spring-oxm module for Marshaller classes etc.
  compile("org.springframework:spring-oxm:${orgSpringframeworkVersion}")
  compile("org.apache.httpcomponents:httpclient:4.3.3")  
  
  // Test dependencies
  testCompile("junit:junit:4.11")
  testCompile("org.hamcrest:hamcrest-library:1.3")
  testCompile("org.springframework:spring-test:${orgSpringframeworkVersion}")
  testCompile("com.thoughtworks.xstream:xstream:1.4.7")

  // Use an SLF4J-binding of logback-classic for testing purposes, but avoid imposing it as a dependency upon 
  // users of the app by declaring the scope of the dependency of 'test' only
  testCompile("ch.qos.logback:logback-classic:1.1.2")
  // Add support for bridging logs written to Java Commons Logging by 3rd party classes (e.g. Apache HTTP client) to SLF4J
  testCompile("org.slf4j:jcl-over-slf4j:1.7.7")
  // Add support for bridging logs written to Log4j by 3rd party classes (e.g. Wiremock) to SLF4J
  testCompile("org.slf4j:log4j-over-slf4j:1.7.7")  
  testCompile("org.easymock:easymock:3.2")
  testCompile("com.github.tomakehurst:wiremock:1.51")  
}

jar {
  baseName = 'brighttalk-channel-reporting-api-v1-client'
  version =  '0.0.1-SNAPSHOT'
  // Exclude environment specific props files from JAR as they're only templates and get packaged in the zip
  exclude('brighttalk-channel-reporting-api-v1-client-*.properties')  
}

task sourcesJar(type: Jar) {
  baseName = "${jar.baseName}"
  classifier 'sources'
  from sourceSets.main.allSource
  version =  "${jar.version}"      
}

task javadocJar(type: Jar, dependsOn: javadoc) {
  baseName = "${jar.baseName}"
  classifier = 'javadoc'
  from javadoc.destinationDir
  version =  "${jar.version}"  
}

artifacts {
  // Extend published artifacts to include source and javadoc JARs as well as default JAR 
  archives sourcesJar
  archives javadocJar
}

// Configure Maven plugin's install task with meta-data needed to publish artifact to local Maven repos.
install {
  repositories.mavenInstaller {
    pom.groupId = 'com.neiljbrown.brighttalk.channels'
    pom.artifactId = "${jar.baseName}"      
    pom.version = "${jar.version}"
  }  
}
 
task wrapper(type: Wrapper) {
  gradleVersion = '1.12'
}